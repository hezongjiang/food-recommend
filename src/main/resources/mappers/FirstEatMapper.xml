<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tencent.food.recommend.persist.dao.FirstEatMapper">
  <resultMap id="BaseResultMap" type="com.tencent.food.recommend.persist.model.FirstEat">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="food_id" jdbcType="INTEGER" property="foodId" />
    <result column="food_name" jdbcType="VARCHAR" property="foodName" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="create_date" jdbcType="BIGINT" property="createDate" />
    <result column="remind_date" jdbcType="BIGINT" property="remindDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, food_id, food_name, quantity, weight, create_date, remind_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from first_eat
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from first_eat
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tencent.food.recommend.persist.model.FirstEat">
    insert into first_eat (id, food_id, food_name, 
      quantity, weight, create_date, 
      remind_date)
    values (#{id,jdbcType=INTEGER}, #{foodId,jdbcType=INTEGER}, #{foodName,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=INTEGER}, #{weight,jdbcType=INTEGER}, #{createDate,jdbcType=BIGINT}, 
      #{remindDate,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.tencent.food.recommend.persist.model.FirstEat">
    insert into first_eat
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="foodId != null">
        food_id,
      </if>
      <if test="foodName != null">
        food_name,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="remindDate != null">
        remind_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="foodId != null">
        #{foodId,jdbcType=INTEGER},
      </if>
      <if test="foodName != null">
        #{foodName,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=BIGINT},
      </if>
      <if test="remindDate != null">
        #{remindDate,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tencent.food.recommend.persist.model.FirstEat">
    update first_eat
    <set>
      <if test="foodId != null">
        food_id = #{foodId,jdbcType=INTEGER},
      </if>
      <if test="foodName != null">
        food_name = #{foodName,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=BIGINT},
      </if>
      <if test="remindDate != null">
        remind_date = #{remindDate,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tencent.food.recommend.persist.model.FirstEat">
    update first_eat
    set food_id = #{foodId,jdbcType=INTEGER},
      food_name = #{foodName,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=BIGINT},
      remind_date = #{remindDate,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>